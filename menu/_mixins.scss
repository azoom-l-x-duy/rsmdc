//
// Copyright 2018 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@import "../feature-targeting/functions";
@import "../feature-targeting/mixins";
@import "../rtl/mixins";
@import "../list/mixins";
@import "../ripple/mixins";
@import "./variables";

@mixin rs-menu-core-styles($query: rs-feature-all()) {
  $feat-color: rs-feature-create-target($query, color);
  $feat-structure: rs-feature-create-target($query, structure);

  @include rs-ripple-common($query);

  // Customize the menu-surface and contained list to match the rs-menu styles.
  .rs-menu {
    @include rs-list-item-meta-ink-color(text-primary-on-background, $query);
    @include rs-list-item-graphic-ink-color(text-primary-on-background, $query);

    @include rs-feature-targets($feat-structure) {
      min-width: $rs-menu-min-width;
    }

    .rs-list-divider {
      @include rs-feature-targets($feat-structure) {
        margin: 8px 0;
      }
    }

    .rs-list-item {
      @include rs-feature-targets($feat-structure) {
        cursor: pointer;
        user-select: none;
      }
    }

    .rs-list-item--disabled {
      @include rs-feature-targets($feat-structure) {
        cursor: auto;
      }
    }

    //stylelint-disable selector-no-qualifying-type
    a.rs-list-item .rs-list-item__text,
    a.rs-list-item .rs-list-item__graphic {
      @include rs-feature-targets($feat-structure) {
        pointer-events: none;
      }
    }
    // stylelint-enable selector-no-qualifying-type
  }

  // postcss-bem-linter: define menu
  .rs-menu__selection-group {
    @include rs-feature-targets($feat-structure) {
      padding: 0;
      fill: currentColor;
    }

    .rs-list-item {
      @include rs-feature-targets($feat-structure) {
        @include rs-rtl-reflexive-box(padding, left, 56px);
      }
    }

    // Extra specificity required to override `display` property on `rs-list-item__graphic`.
    .rs-menu__selection-group-icon {
      @include rs-feature-targets($feat-structure) {
        @include rs-rtl-reflexive-position(left, 16px);

        display: none;
        position: absolute;
      }
    }
  }
  // postcss-bem-linter: end

  // stylelint-disable-next-line plugin/selector-bem-pattern
  .rs-menu-item--selected .rs-menu__selection-group-icon {
    @include rs-feature-targets($feat-structure) {
      display: inline;
    }
  }
}

@mixin rs-menu-width($width, $query: rs-feature-all()) {
  $feat-structure: rs-feature-create-target($query, color);

  @include rs-feature-targets($feat-structure) {
    @if unitless($width) {
      width: $width * $rs-menu-width-base;
    } @else {
      width: $width;
    }
  }
}
