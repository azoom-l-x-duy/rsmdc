//
// Copyright 2018 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@import "../feature-targeting/functions";
@import "../feature-targeting/mixins";
@import "../theme/mixins";
@import "../shape/mixins";
@import "../shape/rs-functions";
@import "../animation/variables";
@import "../elevation/mixins";
@import "../rtl/mixins";
@import "./variables";
@import "../menu/variables";

@mixin rs-menu-surface-core-styles() {

  .rs-menu-surface {
    @include rs-menu-surface-base_();
    box-shadow: #{rs-elevation(8)};
    min-width: $rs-menu-min-width;

    @include rs-rtl-reflexive-property(transform-origin, top left, top right);
  }

  .rs-menu-surface--anchor {
    position: relative;
    overflow: visible;
  }

  .rs-menu-surface--fixed {
    position: fixed;
  }
}

@mixin rs-menu-surface-ink-color($color) {
  --rs-menu-surface--color: #{$color};
}

@mixin rs-menu-surface-fill-color($color) {
  --rs-menu-surface--background-color: #{$color};
}

@mixin rs-menu-surface-shape-radius($radius, $rtl-reflexive: false) {
  --rs-menu-surface--border-radius: #{rs-shape-radius($radius)};
  --rs-menu-surface_rtl--border-radius: #{rs-shape-rtl-radius($radius, $rtl-reflexive)};
}

@mixin rs-menu-surface-base_() {

  box-sizing: border-box;
  max-width: calc(100vw - #{$rs-menu-surface-min-distance-from-edge});
  max-height: calc(100vh - #{$rs-menu-surface-min-distance-from-edge});
  margin: 0;
  padding: 0;
  transform-origin: top left;
  overflow: auto;
  will-change: transform, opacity;
  z-index: $rs-menu-surface-z-index;

  transition:
    opacity $rs-menu-surface-fade-in-duration linear,
    transform $rs-menu-surface-scale-duration $rs-animation-deceleration-curve-timing-function;

  &:focus {
    outline: none;
  }

  // stylelint-disable-next-line selector-max-type
  &--open {
    --rs-menu-surface--display: inline-block;
    --rs-menu-surface--transform: scale(1);
    --rs-menu-surface--opacity: 1;
  }

  &--animating-open {
    --rs-menu-surface--display: inline-block;
    --rs-menu-surface--transform: scale(.8);
    --rs-menu-surface--opacity: 0;
  }

  &--animating-closed {
    --rs-menu-surface--display: inline-block;
    --rs-menu-surface--opacity: 0;

    transition: opacity $rs-menu-surface-fade-out-duration linear;
  }
}
