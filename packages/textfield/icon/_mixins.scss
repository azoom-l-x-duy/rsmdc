@mixin rs-text-field-icon-color($color, $styleSecondIcon: false) {
  &:not(.rs-text-field--disabled) {
    @include rs-text-field-icon-color_($color, $styleSecondIcon);
  }
}

// Private mixins

@mixin rs-text-field-icon-horizontal-position_($position-property, $position, $padding) {
  .rs-text-field__icon {
    @include rs-rtl-reflexive-position($position-property, $position);
  }

  // Move the input's position, to allow room for the icon
  @if ($position-property == left) {
    .rs-text-field__input {
      @include rs-rtl-reflexive-property(padding, $padding /* left-value */, $position  /* right-value */);
    }
  } @else {
    .rs-text-field__input {
      @include rs-rtl-reflexive-property(padding, $position /* left-value */, $padding  /* right-value */);
    }
  }
}

@mixin rs-text-field-icon-horizontal-position-two-icons_($position-left, $padding-left, $position-right, $padding-right) {
  .rs-text-field__icon {
    @include rs-rtl-reflexive(left, $position-left, right, auto);

    ~ .rs-text-field__icon {
      @include rs-rtl-reflexive(right, $position-right, left, auto);
    }
  }

  // Move the input's position, to allow room for the icons.
  .rs-text-field__input {
    @include rs-rtl-reflexive-property(padding, $padding-left, $padding-right);
  }
}

@mixin rs-text-field-icon-color_($color, $styleSecondIcon: false) {
  .rs-text-field__icon {
    @if ($styleSecondIcon) {
      ~ .rs-text-field__icon { // Selects the second instance of this class regardless of element type.
        @include rs-theme-prop(color, $color);
      }
    } @else {
      @include rs-theme-prop(color, $color);
    }
  }
}
