@mixin rs-button-type($type: flat, $option: none) {
  @if $type == outlined {
    @include rs-button--outlined_;
    @include rs-button-outline-width(2px);
    @include rs-button-outline-color($rs-theme-primary);
  }@else if $type == raised {
    @include rs-button--raised_;
    @include rs-button--filled_;
    @include rs-button-container-fill-color($rs-theme-primary);
    @include rs-button-ink-color($rs-theme-on-primary);
    @include rs-states(on-primary);

  }@else if $type == fab {
    @include rs-fab_;

  }@else if $type == dense {
    @include rs-button--dense_;

  }@else if $type == unelevated {
    @include rs-button--filled_;
    @include rs-button-container-fill-color($rs-theme-primary);
    @include rs-button-ink-color($rs-theme-on-primary);
    @include rs-states(on-primary);
  }@else if $type == dense {
    @include rs-button--dense_;
  }

  @if $option == dense {
    @include rs-button--dense_;

  }@else if $option == mini {
    @include rs-fab--mini_;

  }@else if $option == extended {
    @include rs-fab--extended_;
  }
}

@mixin rs-button-filled-accessible($container-fill-color) {
  $fill-tone: rs-theme-tone($container-fill-color);
  @include rs-button-container-fill-color($container-fill-color);
  
  @if ($fill-tone == "dark") {
    @include rs-button-ink-color(rs-theme-ink-color-for-fill_(primary, dark));
    @include rs-button-icon-ink-color(rs-theme-ink-color-for-fill_(primary, dark));
    @include rs-states(text-primary-on-dark);
  } @else {
    @include rs-button-ink-color(rs-theme-ink-color-for-fill_(primary, light));
    @include rs-button-icon-ink-color(rs-theme-ink-color-for-fill_(primary, light));
    @include rs-states(text-primary-on-light);
  }
}

@mixin rs-button-container-fill-color($color) {
  --rs-button_not_disabled--background-color: #{$color};
}

@mixin rs-button-outline-color($color) {
  --rs-button_not_disabled--border-color: #{$color};
}

@mixin rs-button-ink-color($color) {
  --rs-button_not_disabled--color: #{$color};
}

@mixin rs-button-icon-ink-color($color) {
  --rs-button_before--color: #{$color};
  --rs-button_after--color: #{$color};
  --rs-button__icon__no-text_not__fab_not_disabled_before--color: #{$color};
}

@mixin rs-button-shape-radius($radius, $rtl-reflexive: false) {
  --rs-button--border-radius: #{rs-shape-radius($radius)};
  --rs-button_rtl--border-radius: #{rs-shape-rtl-radius($radius, $rtl-reflexive)};
}

@mixin rs-button-fab-extended-shape-radius($radius) {
  --rs-button--border-radius: #{rs-shape-resolve-percentage-radius($rs-fab-extended-height, $radius)};
  --rs-button_rtl--border-radius: #{rs-shape-resolve-percentage-radius($rs-fab-extended-height, $radius)};
}

@mixin rs-button-horizontal-padding($padding) {
  --rs-button--padding-right: #{$padding};
  --rs-button--padding-left: #{$padding};
}

@mixin rs-button-outline-width(
  $outline-width,
  $padding: $rs-button-contained-horizontal-padding,
) {
  $padding-value: max($padding - $outline-width, 0);

  @include rs-button-horizontal-padding($padding-value);

  --rs-button--border-width: #{$outline-width};
}

@mixin rs-button-icon-image($icon, $icon-name: '') {
  $value: if(str-slice('#{$icon}', 1, 4) == 'url(', path, font-family);
  --rs-button__icon: true;
  --rs-button_before--display: block;
  --rs-button-label--padding-left: 8px;

  @if $value == path {
    --rs-button_before--background-image: #{$icon};
    --rs-button_after--background-image: #{$icon};
  }@else {
    --rs-button_before--font-family: '#{$icon}';
    --rs-button_after--font-family: '#{$icon}';
    --rs-button_before--content: #{unquote('"\\#{$icon-name}"')};
    --rs-button_after--content: #{unquote('"\\#{$icon-name}"')};
  }
}

@mixin rs-button-icon-position($position: left) {
  @if $position == left {
    --rs-button-label--padding-left: 8px;
    --rs-button-label--padding-right: 0;
    --rs-button_before--display: block;
    --rs-button_after--display: none;
  }@else if $position == right {
    --rs-button-label--padding-left: 0;
    --rs-button-label--padding-right: 8px;
    --rs-button_before--display: none;
    --rs-button_after--display: block;
  }
}

@mixin rs-button-fab-extended-fluid {
  --rs-button--width: 100%;
}

@mixin rs-button-states-color($color) {
  @include rs-states($color);
}
