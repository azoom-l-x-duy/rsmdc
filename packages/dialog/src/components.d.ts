/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface RsDialog {
    'isOpened': () => Promise<void>;
    'isScrolling': () => Promise<void>;
    'opened': boolean;
    'scrolling': boolean;
    'wrap': (element: any, wrapper: any) => Promise<void>;
  }
  interface RsDialogContent {}
  interface RsDialogTitle {}
}

declare global {


  interface HTMLRsDialogElement extends Components.RsDialog, HTMLStencilElement {}
  var HTMLRsDialogElement: {
    prototype: HTMLRsDialogElement;
    new (): HTMLRsDialogElement;
  };

  interface HTMLRsDialogContentElement extends Components.RsDialogContent, HTMLStencilElement {}
  var HTMLRsDialogContentElement: {
    prototype: HTMLRsDialogContentElement;
    new (): HTMLRsDialogContentElement;
  };

  interface HTMLRsDialogTitleElement extends Components.RsDialogTitle, HTMLStencilElement {}
  var HTMLRsDialogTitleElement: {
    prototype: HTMLRsDialogTitleElement;
    new (): HTMLRsDialogTitleElement;
  };
  interface HTMLElementTagNameMap {
    'rs-dialog': HTMLRsDialogElement;
    'rs-dialog-content': HTMLRsDialogContentElement;
    'rs-dialog-title': HTMLRsDialogTitleElement;
  }
}

declare namespace LocalJSX {
  interface RsDialog extends JSXBase.HTMLAttributes<HTMLRsDialogElement> {
    'onChange'?: (event: CustomEvent<any>) => void;
    'opened'?: boolean;
    'scrolling'?: boolean;
  }
  interface RsDialogContent extends JSXBase.HTMLAttributes<HTMLRsDialogContentElement> {}
  interface RsDialogTitle extends JSXBase.HTMLAttributes<HTMLRsDialogTitleElement> {}

  interface IntrinsicElements {
    'rs-dialog': RsDialog;
    'rs-dialog-content': RsDialogContent;
    'rs-dialog-title': RsDialogTitle;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


