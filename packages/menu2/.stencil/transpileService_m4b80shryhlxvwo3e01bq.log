{"moduleFile":{"sourceFilePath":"/Users/kokamimoyu/workspace/rsmdc/packages/menu2/src/components/rs-menu/rs-menu.tsx","jsFilePath":"/Users/kokamimoyu/workspace/rsmdc/packages/menu2/src/components/rs-menu/rs-menu.js","cmps":[{"isLegacy":false,"tagName":"rs-menu","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Menu","elementRef":"el","encapsulation":"shadow","properties":[{"name":"opened","type":"boolean","attribute":"opened","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"boolean","resolved":"boolean","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[],"methods":[{"name":"isOpened","docs":{"text":"","tags":[]},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global"}},"return":"Promise<void>"},"internal":false}],"listeners":[],"events":[],"watchers":[{"propName":"opened","methodName":"openeddHandler"}],"styles":[{"modeName":"$","styleId":"RS-MENU","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/kokamimoyu/workspace/rsmdc/packages/menu2/src/dist/result.css","relativePath":"../../dist/result.css","originalComponentPath":"../../dist/result.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/kokamimoyu/workspace/rsmdc/packages/menu2/src/components/rs-menu/rs-menu.js","sourceFilePath":"/Users/kokamimoyu/workspace/rsmdc/packages/menu2/src/components/rs-menu/rs-menu.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":true,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":true,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":true,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":false,"hasStyle":true,"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":true,"isPlain":false,"htmlAttrNames":["class"],"htmlTagNames":["div","slot"],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":true,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":false,"hasVdomStyle":true,"hasVdomText":true,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["@stencil/core"],"potentialCmpRefs":[]},"jsText":"import { Host, h } from \"@stencil/core\";\r\nexport class Menu {\r\n    openeddHandler() {\r\n        this.isOpened();\r\n    }\r\n    async isOpened() {\r\n        if (this.opened) {\r\n            document.querySelector('body').addEventListener('click', () => {\r\n                this.menu.classList.add('-closed');\r\n                console.log(document.querySelector('body'));\r\n            });\r\n            this.menu.classList.remove('-closed');\r\n        }\r\n        else {\r\n            this.menu.classList.remove(\"-opened\");\r\n        }\r\n    }\r\n    componentDidLoad() {\r\n        this.menu = this.el.shadowRoot.querySelector('.rs-menu');\r\n        this.isOpened();\r\n    }\r\n    render() {\r\n        return h(Host, null,\r\n            h(\"div\", { class: \"rs-menu rs-menu-surface\" },\r\n                h(\"slot\", null)));\r\n    }\r\n    static get is() { return \"rs-menu\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"../../dist/result.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"../../dist/result.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"opened\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"opened\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n    static get methods() { return {\r\n        \"isOpened\": {\r\n            \"complexType\": {\r\n                \"signature\": \"() => Promise<void>\",\r\n                \"parameters\": [],\r\n                \"references\": {\r\n                    \"Promise\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                },\r\n                \"return\": \"Promise<void>\"\r\n            },\r\n            \"docs\": {\r\n                \"text\": \"\",\r\n                \"tags\": []\r\n            }\r\n        }\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"opened\",\r\n            \"methodName\": \"openeddHandler\"\r\n        }]; }\r\n}\r\n"}