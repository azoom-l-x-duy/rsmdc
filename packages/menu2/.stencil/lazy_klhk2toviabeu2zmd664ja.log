import { registerInstance as __stencil_registerInstance, getElement as __stencil_getElement } from "@stencil/core";
import { Host, h } from "@stencil/core";
export const Menu = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
    }
    openeddHandler() {
        this.isOpened();
    }
    async isOpened() {
        if (this.opened) {
            this.menu.classList.add("-opened");
            document.querySelector('body').addEventListener('click', () => {
                this.menu.style.opacity = '0';
                this.menu.style.height = '0';
            });
        }
        else {
            this.menu.classList.remove("-opened");
            this.menu.style.opacity = '1';
            this.menu.style.height = 'auto';
        }
    }
    componentDidLoad() {
        this.menu = this.el.shadowRoot.querySelector('.rs-menu');
        this.isOpened();
    }
    render() {
        return h(Host, null, h("div", { class: "rs-menu rs-menu-surface" }, h("slot", null)));
    }
    get el() { return __stencil_getElement(this); }
    static get watchers() { return {
        "opened": ["openeddHandler"]
    }; }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:rs-menu"; }
};
