//
// Copyright 2016 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@import "../animation/functions";
@import "../ripple/mixins";
@import "../ripple/variables";
@import "../theme/mixins";
@import "../theme/variables";
@import "./functions";
@import "./variables";

@mixin rs-radio-core-styles() {
  @include rs-radio-without-ripple;
  @include rs-radio-ripple;
}

@mixin rs-radio-without-ripple() {
  .rs-radio {

    display: inline-block;
    position: relative;
    flex: 0 0 auto;
    box-sizing: border-box;
    width: $rs-radio-touch-area;
    height: $rs-radio-touch-area;
    padding: ($rs-radio-touch-area - $rs-radio-ui-size) / 2;
    cursor: pointer;
    /* @alternate */
    will-change: opacity, transform, border-color, color;

    // Container for radio circles and ripple.
    &__background {
      display: inline-block;
      position: absolute;
      left: ($rs-radio-touch-area - $rs-radio-ui-size) / 2;
      box-sizing: border-box;
      width: $rs-radio-ui-pct;
      height: $rs-radio-ui-pct;

      &::before {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        transform: scale(0, 0);
        border-radius: 50%;
        opacity: 0;
        pointer-events: none;
        content: "";
        transition: rs-radio-exit(opacity), rs-radio-exit(transform);
      }
    }

    &__outer-circle {
      position: absolute;
      top: 0;
      left: 0;
      box-sizing: border-box;
      width: 100%;
      height: 100%;
      border-width: 2px;
      border-style: solid;
      border-radius: 50%;

      transition: rs-radio-exit(border-color);
    }

    &__inner-circle {
      position: absolute;
      top: 0;
      left: 0;
      box-sizing: border-box;
      width: 100%;
      height: 100%;
      transform: scale(0, 0);
      border-width: 10px;
      border-style: solid;
      border-radius: 50%;

      transition:
        rs-radio-exit(transform),
        rs-radio-exit(border-color);
    }

    &__native-control {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      margin: 0;
      padding: 0;
      opacity: 0;
      cursor: inherit;
      z-index: 1;
    }
  }

  .rs-radio__native-control:checked,
  .rs-radio__native-control:disabled {
    + .rs-radio__background {
      transition:
        rs-radio-enter(opacity),
        rs-radio-enter(transform);

      .rs-radio__outer-circle {
        transition: rs-radio-enter(border-color);
      }

      .rs-radio__inner-circle {
        transition:
          rs-radio-enter(transform),
          rs-radio-enter(border-color);
      }
    }
  }

  .rs-radio--disabled {
    cursor: default;
    pointer-events: none;
  }

  .rs-radio__native-control:checked {
    + .rs-radio__background {
      .rs-radio__inner-circle {
        transform: scale(.5);

        transition:
          rs-radio-enter(transform),
          rs-radio-enter(border-color);
      }
    }
  }

  .rs-radio__native-control:disabled,
  [aria-disabled="true"] .rs-radio__native-control {
    + .rs-radio__background {
      cursor: default;

      .rs-radio__outer-circle {
        border-color: $rs-radio-circle-color;
      }

      .rs-radio__inner-circle {
        border-color: $rs-radio-circle-color;
      }
    }
  }

  .rs-radio__native-control:focus {
    + .rs-radio__background::before {
      transform: scale(2, 2);
      opacity: map-get($rs-ripple-dark-ink-opacities, focus);

      transition:
        rs-radio-enter(opacity),
        rs-radio-enter(transform);
    }
  }

  // postcss-bem-linter: end
}

// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other
// radio styles. It is recommended that most users use `rs-radio-core-styles` instead.
@mixin rs-radio-ripple() {
  @include rs-ripple-common();

  .rs-radio {
    @include rs-ripple-surface;
    @include rs-ripple-radius-unbounded;
    @include rs-states($rs-radio-baseline-theme-color);

    &.rs-ripple-upgraded--background-focused {
      .rs-radio__background::before {
        content: none;
      }
    }
  }
}

@mixin rs-radio-unchecked-stroke-color($color) {
  --rs-radio-nativeControl_enabled_not_checked_-background-outerCircle--border-color: #{$color};
}

@mixin rs-radio-checked-stroke-color($color) {
  --rs-radio-nativeControl_enabled_checked_-background-outerCircle--border-color: #{$color};
}

@mixin rs-radio-ink-color($color) {
  --rs-radio-nativeControl_enabled_-background-innerCircle--border-color: #{$color};
}

@mixin rs-radio-focus-indicator-color($color) {
  --rs-radio-background_before--background-color: #{$color};
}
