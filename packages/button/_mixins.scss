//
// Copyright 2016 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
@import "../elevation/mixins";
@import "../ripple/mixins";
@import "../rtl/mixins";
@import "../theme/functions";
@import "../theme/mixins";
@import "../typography/mixins";
@import "../shape/mixins";
@import "../shape/functions";
@import "./variables";
@import "./rs-functions";

@mixin rs-button-filled-accessible($container-fill-color) {
  $fill-tone: rs-theme-tone($container-fill-color);

  @include rs-button-container-fill-color($container-fill-color);
  
  @if ($fill-tone == "dark") {
    @include rs-button-ink-color(rs-theme-ink-color-for-fill_(primary, dark));
    @include rs-states(text-primary-on-dark);
  } @else {
    @include rs-button-ink-color(rs-theme-ink-color-for-fill_(primary, light));
    @include rs-states(text-primary-on-light);
  }
}

@mixin rs-button-container-fill-color($color) {
  --rs-button_not_disabled--background-color: #{$color};
}

@mixin rs-button-outline-color($color) {
  --rs-button_not_disabled--border-color: #{$color};
}

@mixin rs-button-ink-color($color) {
  --rs-button_not_disabled--color: #{$color};
}

@mixin rs-button-shape-radius($radius, $rtl-reflexive: false) {
  --rs-button--border-radius: #{rs-shape-radius($radius)};
  --rs-button_rtl--border-radius: #{rs-shape-rtl-radius($radius, $rtl-reflexive)};
}

@mixin rs-button-horizontal-padding($padding) {
  --rs-button--padding-right: #{$padding};
  --rs-button--padding-left: #{$padding};
}

@mixin rs-button-outline-width(
  $outline-width,
  $padding: $rs-button-contained-horizontal-padding,
) {
  $padding-value: max($padding - $outline-width, 0);

  @include rs-button-horizontal-padding($padding-value);

  --rs-button--border-width: #{$outline-width};
}

@mixin rs-button--outlined_() {
  --rs-button--border-style: solid;
  --rs-button_disabled--border-color: #{$rs-button-disabled-ink-color};
}

@mixin rs-button--filled_() {
  --rs-button--padding-right: #{$rs-button-contained-horizontal-padding};
  --rs-button--padding-left: #{$rs-button-contained-horizontal-padding};
  --rs-button_disabled--background-color: #{rgba(rs-theme-prop-value(on-surface), .12)};
  --rs-button_disabled--color: #{$rs-button-disabled-ink-color};
}

@mixin rs-button--raised_() {
  --rs-button--box-shadow: #{rs-elevation(2)};
  --rs-button_hover--box-shadow: #{rs-elevation(4)};
  --rs-button_focus--box-shadow:  #{rs-elevation(4)};
  --rs-button_active--box-shadow: #{rs-elevation(8)};
  --rs-button_disabled--box-shadow: #{rs-elevation(0)};
  --rs-button--transition: #{rs-elevation-transition-value()};
}

@mixin rs-button--dense_() {
  --rs-button--height: #{$rs-dense-button-height};
  --rs-button--font-size: .8125rem; // 13sp  
  --rs-button--border-radius: #{rs-shape-resolve-percentage-radius(#{$rs-dense-button-height}, #{$rs-shape-small-component-radius})};  //from @mixin rs-button-shape-radius
}
