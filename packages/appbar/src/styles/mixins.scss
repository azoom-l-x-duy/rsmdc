@import "@rsmdc/animation/variables";
@import '@rsmdc/elevation/mixins';
@import "@rsmdc/ripple/mixins-stencil";
@import "@rsmdc/shape/mixins";
@import "@rsmdc/shape/functions";
@import './variables';
@import './functions';

// Change top-app-bar type.
@mixin rs-app-bar-type($types...) {
  @each $type in $types {
    @if $type == dense {

      .rs-app-bar-content {
        padding-top: $rs-top-app-bar-dense-row-height;
      }

      .rs-app-bar {
        &.-compact > .row {
          height: $rs-top-app-bar-dense-row-height;
        }

        > .row {
          height: $rs-top-app-bar-dense-row-height;
        }

        &.-compact > .row > .section {
          padding: 0;
        }

        > .row > .section {
          padding: 0 4px;
        }
      }

      @media (max-width: $rs-top-app-bar-mobile-breakpoint) {
        .rs-app-bar {
          transition: width 250ms $rs-animation-standard-curve-timing-function;

          > .row {
            height: $rs-top-app-bar-dense-row-height;
          }

          > .row > .section {
            padding: 0 $rs-top-app-bar-dense-section-horizontal-padding;
          }
        }
      }

      .rs-app-bar-title {
        padding-left: $rs-top-app-bar-dense-title-left-padding;
      }

    }@else if $type == prominent {

      .rs-app-bar-content {
        padding-top: $rs-top-app-bar-prominent-row-height;
      }

      .rs-app-bar {
        padding-bottom: $rs-top-app-bar-prominent-mobile-title-bottom-padding;

        > .row {
          height: $rs-top-app-bar-prominent-row-height;
        }
      }

      @media (max-width: $rs-top-app-bar-mobile-breakpoint) {
        .rs-app-bar {      
          > .row {
            height: $rs-top-app-bar-prominent-row-height;
          }
        }
      }

      rs-app-bar-title {
        align-self: flex-end;
        padding-bottom: $rs-top-app-bar-prominent-title-bottom-padding;
      }
    }
  }

  $prominent: find-item($types, prominent);
  $dense: find-item($types, dense);

  @if $prominent and $dense {
    $height: $rs-top-app-bar-dense-row-height * 2;

    .rs-app-bar-content {
      padding-top: $height;
    }

    .rs-app-bar {
       > .row {
        height: $height;
      }

      > .row > .section {
        padding: 0 $rs-top-app-bar-section-horizontal-padding;
      }
    }

    rs-app-bar-title {
      padding-bottom: $rs-top-app-bar-prominent-dense-title-bottom-padding;
      padding-left: $rs-top-app-bar-prominent-dense-title-left-padding;
    }
  }
}

// Set icon to action-item.
@mixin rs-app-bar-tool-icon-image($icon, $codepoint: '') {
  $value: if(str-slice('#{$icon}', 1, 4) == 'url(', path, font-family);

  @if $value == path {
    .rs-app-bar-item {

      > .label {
        background-image: $icon;
        height: 24px;
      }

    }

  }@else {
    $name: '\\' + $codepoint;

    .rs-app-bar-item {
      font-family: '#{$icon}';

      > .label::before {
        content: '#{$name}';
      }

    }
  }
}

// Set icon to nav.
@mixin rs-app-bar-nav-icon-image($icon, $codepoint: '') {
  $value: if(str-slice('#{$icon}', 1, 4) == 'url(', path, font-family);

  @if $value == path {
    .rs-app-bar-nav > .label {
      background-image: $icon;
      height: 24px;
    }
  }@else {
    $name: '\\' + $codepoint;

    .rs-app-bar-nav {
      font-family: '#{$icon}';

      > .label::before {
        content: '#{$name}';
      }
    }
  }
}
