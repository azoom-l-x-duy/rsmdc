@mixin rs-slider-highlight-color($color) {
  .rs-slider:not(.-disabled) {
    @include rs-slider-highlight-color_($color);
  }
}

@mixin rs-slider-highlight-color_($color) {
  .rs-slider > .trackcontainer > .track {
    background-color: $color;
  }
}

@mixin rs-slider-rail-color_($color, $opacity: $rs-slider-baseline-rail-opacity) {
  .rs-slider > .trackcontainer {
    background-color: rgba(1,135,134,.26);
  }
}

@mixin rs-slider-rail-tick-mark-color_($color) {
  .rs-slider > .trackcontainer > .track > .trackmarkercontainer > .trackmarker::after,
  .rs-slider > .trackcontainer > .track > .trackmarkercontainer::after {
    background-color: $color;
  }
}


@mixin rs-slider-rail-color($color, $opacity: $rs-slider-baseline-rail-opacity) {
  .rs-slider:not(.-disabled) {
    @include rs-slider-rail-color_($color, $opacity);
  }
}

@mixin rs-slider-rail-tick-mark-color($color) {
  .rs-slider:not(.-disabled) {
    @include rs-slider-rail-tick-mark-color_($color);
  }
}

@mixin rs-slider-thumb-color_($color) {
  .rs-slider > .thumbcontainer > .thumb {
    fill: $color;
    stroke: $color;
  }
}

@mixin rs-slider-thumb-color($color) {
  .rs-slider:not(.-disabled) {
    @include rs-slider-thumb-color_($color);
  }
}


@mixin rs-slider-focus-halo-color($color) {
  .rs-slider:not(.-disabled) {
    > .thumbcontainer > .focusring {
      background-color: $color;
    }
  }
}

@mixin rs-slider-value-pin-fill-color-accessible($color) {
  $color-value: rs-theme-prop-value($color);
  $ink-color: if(rs-theme-tone($color-value) == "light", text-primary-on-light, text-primary-on-dark);

  @include rs-slider-value-pin-fill-color($color);
  @include rs-slider-value-pin-ink-color($ink-color);
}

@mixin rs-slider-value-pin-fill-color($color) {
  .rs-slider:not(.-disabled) {
    > .thumbcontainer > .pin {
      background-color: $color
    }
  }
}

@mixin rs-slider-value-pin-ink-color($color) {
  .rs-slider:not(.-disabled) {
    > .thumbcontainer > .pin {
      color: $color;
    }
  }
}
