/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface RsSlider {
    'countable': boolean;
    'disabled': boolean;
    'isCountable': () => Promise<void>;
    'isDisabled': () => Promise<void>;
    'isMarked': () => Promise<void>;
    'marked': boolean;
    'max': number;
    'min': number;
    'now': number;
    'value': string | number;
  }
}

declare global {


  interface HTMLRsSliderElement extends Components.RsSlider, HTMLStencilElement {}
  var HTMLRsSliderElement: {
    prototype: HTMLRsSliderElement;
    new (): HTMLRsSliderElement;
  };
  interface HTMLElementTagNameMap {
    'rs-slider': HTMLRsSliderElement;
  }
}

declare namespace LocalJSX {
  interface RsSlider extends JSXBase.HTMLAttributes<HTMLRsSliderElement> {
    'countable'?: boolean;
    'disabled'?: boolean;
    'marked'?: boolean;
    'max'?: number;
    'min'?: number;
    'now'?: number;
    'onChange'?: (event: CustomEvent<any>) => void;
    'value'?: string | number;
  }

  interface IntrinsicElements {
    'rs-slider': RsSlider;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


