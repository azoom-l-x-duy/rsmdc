/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface RsTabBar {
    'setIndicatorStyle': (position: any, width: any) => Promise<void>;
    'setScrollPosition': (scrollArea: any, left: any) => Promise<void>;
    'wrap': (element: any, wrapper: any) => Promise<void>;
  }
  interface RsTabItem {
    'activated': boolean;
    'isActivated': () => Promise<void>;
  }
}

declare global {


  interface HTMLRsTabBarElement extends Components.RsTabBar, HTMLStencilElement {}
  var HTMLRsTabBarElement: {
    prototype: HTMLRsTabBarElement;
    new (): HTMLRsTabBarElement;
  };

  interface HTMLRsTabItemElement extends Components.RsTabItem, HTMLStencilElement {}
  var HTMLRsTabItemElement: {
    prototype: HTMLRsTabItemElement;
    new (): HTMLRsTabItemElement;
  };
  interface HTMLElementTagNameMap {
    'rs-tab-bar': HTMLRsTabBarElement;
    'rs-tab-item': HTMLRsTabItemElement;
  }
}

declare namespace LocalJSX {
  interface RsTabBar extends JSXBase.HTMLAttributes<HTMLRsTabBarElement> {}
  interface RsTabItem extends JSXBase.HTMLAttributes<HTMLRsTabItemElement> {
    'activated'?: boolean;
  }

  interface IntrinsicElements {
    'rs-tab-bar': RsTabBar;
    'rs-tab-item': RsTabItem;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


