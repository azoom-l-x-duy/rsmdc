@mixin rs-snackbar-type($types...) {
  @each $type in $types {
    @if $type == stacked {
      .rs-snackbar {
        > .surface {
          padding-bottom: 8px;
          flex-wrap: wrap;
          justify-content: flex-end;
        }
      }
      rs-snackbar-text {
        width: 100%;
        display: block;
      }
    } @else if $type == leading {
      .rs-snackbar {
        justify-content: flex-start;
      }
    }
  }
}

@mixin rs-snackbar-shape-radius($radius) {
  
  .rs-snackbar {
    > .surface {
      border-radius: $radius;
    }
  }
}

@mixin rs-snackbar-min-width($min-width, $mobile-breakpoint: $rs-snackbar-mobile-breakpoint) {
  .rs-snackbar {
    > .surface {
      min-width: $min-width;

      @media (max-width: $mobile-breakpoint), (max-width: $min-width) {
        min-width: 100%;
      }
    }
  }
}

@mixin rs-snackbar-max-width($max-width) {

  .rs-snackbar {
    > .surface {
      max-width: $max-width;
    }
  }
}

@mixin rs-snackbar-elevation($z-index) {
  .rs-snackbar {
    z-index: $z-index;
  }
}

@mixin rs-snackbar-viewport-margin($margin) {
  .rs-snackbar {
    margin: $margin;
  }
}

@mixin rs-snackbar-container-fill-color($color) {

  .rs-dialog {
    > .surface {
      background-color: $color;
    }
  }
}

@mixin rs-snackbar-fill-color($color) {
  .rs-snackbar {
   > .surface {
     background-color: $color;
    }
  }
}

@mixin rs-snackbar-label-ink-color($color) {
  .rs-snackbar-title {
    color: $color;
  }
}