/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface RsSnackbar {
    'isLeading': () => Promise<void>;
    'isOpened': () => Promise<void>;
    'isStacked': () => Promise<void>;
    'leading': boolean;
    'opened': boolean;
    'stacked': boolean;
  }
  interface RsSnackbarText {}
}

declare global {


  interface HTMLRsSnackbarElement extends Components.RsSnackbar, HTMLStencilElement {}
  var HTMLRsSnackbarElement: {
    prototype: HTMLRsSnackbarElement;
    new (): HTMLRsSnackbarElement;
  };

  interface HTMLRsSnackbarTextElement extends Components.RsSnackbarText, HTMLStencilElement {}
  var HTMLRsSnackbarTextElement: {
    prototype: HTMLRsSnackbarTextElement;
    new (): HTMLRsSnackbarTextElement;
  };
  interface HTMLElementTagNameMap {
    'rs-snackbar': HTMLRsSnackbarElement;
    'rs-snackbar-text': HTMLRsSnackbarTextElement;
  }
}

declare namespace LocalJSX {
  interface RsSnackbar extends JSXBase.HTMLAttributes<HTMLRsSnackbarElement> {
    'leading'?: boolean;
    'opened'?: boolean;
    'stacked'?: boolean;
  }
  interface RsSnackbarText extends JSXBase.HTMLAttributes<HTMLRsSnackbarTextElement> {}

  interface IntrinsicElements {
    'rs-snackbar': RsSnackbar;
    'rs-snackbar-text': RsSnackbarText;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


