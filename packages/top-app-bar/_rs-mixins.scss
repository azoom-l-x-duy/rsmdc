@import './variables';
@import './mixins';
@import './rs-functions';
@import '../elevation/mixins';
@import "../animation/variables";

@mixin rs-top-app-bar-type($types...) {
  @each $type in $types {
    @if $type == short {
      --rs-top-app-bar-content--padding-top: #{$rs-top-app-bar-mobile-row-height};
      
      --rs-top-app-bar__short: true;
      --rs-top-app-bar--top: 0;
      --rs-top-app-bar--right: auto;
      --rs-top-app-bat--left: 0;
      --rs-top-app-bar--width: 100%;
      --rs-top-app-bar--transition: #{width 250ms $rs-animation-standard-curve-timing-function};
      --rs-top-app-bar_media--transition: #{width 200ms $rs-animation-standard-curve-timing-function};
      --rs-top-app-bar_rtl--right: 0;
      --rs-top-app-bar_rtl--left: auto;
      --rs-top-app-bar-row--height: #{$rs-top-app-bar-mobile-row-height};
      --rs-top-app-bar-section--padding: #{$rs-top-app-bar-mobile-section-padding};
      --rs-top-app-bar-title--transition: #{opacity 200ms $rs-animation-standard-curve-timing-function};
      --rs-top-app-bar-title--opacity: 1;
    }@else if $type == dense {
      --rs-top-app-bar-content--padding-top: #{$rs-top-app-bar-dense-row-height};
      
      --rs-top-app-bar-row--height: #{$rs-top-app-bar-dense-row-height};
      --rs-top-app-bar-section--padding: #{0 $rs-top-app-bar-dense-section-horizontal-padding};
      --rs-top-app-bar-title--padding-left: #{$rs-top-app-bar-dense-title-left-padding};
    }@else if $type == prominent {
      --rs-top-app-bar__prominent: true;
      --rs-top-app-bar-content--padding-top: #{$rs-top-app-bar-prominent-row-height};

      --rs-top-app-bar-row--height: #{$rs-top-app-bar-prominent-row-height};
      --rs-top-app-bar--padding-bottom: #{$rs-top-app-bar-prominent-mobile-title-bottom-padding};
      --rs-top-app-bar-title--align-self: flex-end;
      --rs-top-app-bar-title--padding-bottom: $rs-top-app-bar-prominent-title-bottom-padding;
      --rs-top-app-bar-actionItem--align-self: flex-start;
      --rs-top-app-bar-navigationIcon--align-self: flex-start;
    }@else if $type == fixed {
      --rs-top-app-bar__fixed: true;
      --rs-top-app-bar--transition: box-shadow 200ms linear;
    }@else if $type == adjust {
      --rs-top-app-bar--padding-top: #{$rs-top-app-bar-row-height};
      --rs-top-app-bar_media--padding-top: #{$rs-top-app-bar-mobile-row-height};
    }@else if $type == collapsed {
      --rs-top-app-bar__collapsed: true;
      @include rs-top-app-bar-short-shape-radius(24px);
      --rs-top-app-bar--box-shadow: #{rs-elevation(4)};
      --rs-top-app-bar_media--transition: #{width 250ms $rs-animation-standard-curve-timing-function};
      --rs-top-app-bar__collapsed--padding-right: #{$rs-top-app-bar-short-collapsed-right-icon-padding};
      --rs-top-app-bar__collapsed--padding-left: 0;
      --rs-top-app-bar__collapsed--margin-left: 0;
      --rs-top-app-bar-actionItem--transition: #{padding 150ms $rs-animation-standard-curve-timing-function};
    }
  }

  $short: find-item($types, short);
  $collapsed: find-item($types, collapsed);
  $prominent: find-item($types, prominent);
  $adjust: find-item($types, adjust);
  $dense: find-item($types, dense);

  @if $short and $collapsed {
    --rs-top-app-bar--width: var(--rs-top-app-bar__collapsed--width, #{$rs-top-app-bar-short-collapsed-width});
    --rs-top-app-bar-actionItem--padding-right: var(--rs-top-app-bar__collapsed-actionItems--padding-right);
    --rs-top-app-bar--transition: #{width 300ms $rs-animation-standard-curve-timing-function};
    --rs-top-app-bar-title--display: none;
    --rs-top-app-bar-actionItem--transition: #{padding 150ms $rs-animation-standard-curve-timing-function};
  }
  @if $prominent and $dense {
    $height: $rs-top-app-bar-dense-row-height * 2;
    --rs-top-app-bar-content--padding-top: #{$height};
    
    --rs-top-app-bar-row--height: #{$height};
    --rs-top-app-bar-section--padding: 0 #{$rs-top-app-bar-section-horizontal-padding};
    --rs-top-app-bar-title--padding-bottom: #{$rs-top-app-bar-prominent-dense-title-bottom-padding};
    --rs-top-app-bar-title--padding-left: #{$rs-top-app-bar-title-left-padding};
  }
}

@mixin rs-top-app-bar-content($types...) {

  @if (length($types) > 0) {
    @each $type in $types {
      @if $type == short {
        padding-top: $rs-top-app-bar-mobile-row-height;
      }@else if $type == dense {
        padding-top: $rs-top-app-bar-dense-row-height;
      }@else if $type == prominent {
        padding-top: $rs-top-app-bar-prominent-row-height;
      }@else {
        padding-top: $rs-top-app-bar-row-height;
      }
    }
  
    $short: find-item($types, short);
    $prominent: find-item($types, prominent);
    $dense: find-item($types, dense);
  
    @if $prominent and $dense {
      $height: $rs-top-app-bar-dense-row-height * 2;
      padding-top: #{$height};
    }  
  }@else {
    padding-top: $rs-top-app-bar-row-height;
  }
}

@mixin rs-top-app-bar-with-drawer($drawerType: default) {
  @if $drawerType == permanent {
    --rs-app-layout-content--margin-left: #{$rs-drawer-width};
  }
}

@mixin rs-top-app-bar-action-image($path) {
  --rs-top-app-bar-actionItem--background-image: #{$path};
}

@mixin rs-top-app-bar-nav-image($path) {
  --rs-top-app-bar-navigationIcon--background-image: #{$path};
}